/* This file was generated by SableCC (http://www.sablecc.org/). */

package interpreter.analysis;

import interpreter.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseADocument(ADocument node);
    void caseAAuthorBlock(AAuthorBlock node);
    void caseATitleBlock(ATitleBlock node);
    void caseADateBlock(ADateBlock node);
    void caseAFontSizeBlock(AFontSizeBlock node);
    void caseABoldBlock(ABoldBlock node);
    void caseAItalicBlock(AItalicBlock node);
    void caseAImageBlock(AImageBlock node);
    void caseALinkBlock(ALinkBlock node);
    void caseAEmailBlock(AEmailBlock node);
    void caseAParaBlock(AParaBlock node);
    void caseAListBlock(AListBlock node);
    void caseATableBlock(ATableBlock node);
    void caseAListItem(AListItem node);
    void caseATableRow(ATableRow node);
    void caseATdTableItem(ATdTableItem node);
    void caseAThTableItem(AThTableItem node);
    void caseATerminalInline(ATerminalInline node);
    void caseAAuthorInline(AAuthorInline node);
    void caseATitleInline(ATitleInline node);
    void caseADateInline(ADateInline node);
    void caseAEmailInline(AEmailInline node);
    void caseAImageInline(AImageInline node);
    void caseALinkInline(ALinkInline node);
    void caseABoldInline(ABoldInline node);
    void caseAItalicInline(AItalicInline node);
    void caseAFontSizeInline(AFontSizeInline node);
    void caseAPlainTextTerminal(APlainTextTerminal node);
    void caseAInlineTerminal(AInlineTerminal node);

    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBrk(TLBrk node);
    void caseTRBrk(TRBrk node);
    void caseTDash(TDash node);
    void caseTTilde(TTilde node);
    void caseTAuthor(TAuthor node);
    void caseTTitle(TTitle node);
    void caseTDate(TDate node);
    void caseTImage(TImage node);
    void caseTLink(TLink node);
    void caseTBold(TBold node);
    void caseTItalic(TItalic node);
    void caseTEmail(TEmail node);
    void caseTPara(TPara node);
    void caseTList(TList node);
    void caseTTable(TTable node);
    void caseTFontSize(TFontSize node);
    void caseTTr(TTr node);
    void caseTTd(TTd node);
    void caseTTh(TTh node);
    void caseTBlank(TBlank node);
    void caseTPlainText(TPlainText node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
